{
  "hash": "637404e8aba212e3f8d0aa5d270a2580",
  "result": {
    "markdown": "---\nmetadata-files: \n    - ../../_variables.yml\ntitle: |\n    <span class='fa-stack course-icon'>\n        <i class='fas {{< var course.icon-bg >}} fa-stack-2x blue'></i>\n        <i class='fas {{< var course.icon >}} fa-stack-1x fa-inverse' style='margin-top:-5pt'></i>\n      </span><br>\n    {{< var course.subtitle >}}\nauthor: \"{{< var instructor.name >}}\"  \nsubtitle: Visualization\ndate: October 16, 2023\ndate-format: long\nfrom: markdown+emoji\nbibliography: ../../data/lit/wipol_advanced.bib\ncsl: ../../data/lit/wipol.csl\nexecute:\n  freeze: auto\n  echo: true\n  fig-width: 6\n  fig-height: 5\nformat:\n  revealjs:\n    theme: ../econpol_slides.scss\n    footer: '{{< var course.number >}} {{< var course.title >}} | {{< var course.semester >}}'\n    logo: ../../data/img/wu-logo-simple.png\n    header-includes: |\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\" rel=\"stylesheet\"/>\n    slide-number: true\n    show-slide-number: all\n    transition: fade\n    progress: true\n    multiplex: false\n    scrollable: true\n    preview-links: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    pause: true\n---\n\n\n\n# Pioneers of data visualization\n\n<center>\n![](../../data/img/avatar_sakko.png){width=250}\n</center>\n\n::: footer\n:::\n\n## Milestones in data visualization {.medium}\n\n![](img/timeline.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\nSource: @friendly:2008\n:::\n\n## William Playfair (1759-1823) {.medium}\n\n![](img/playfair.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[created: 1786]\n:::\n\n## John Snow (1813-1858) {.medium}\n\n::: {.columns}\n::: {.column width=60%}\n![](img/cholera_large.jpg){height=\"450\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column width=35%}\n![](img/cholera_detail.png){height=\"450\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[created: 1854]\n:::\n\n## Florence Nightingale (1820-1910) {.medium}\n\n![](img/nightingale.jpg){fig-align=\"center\" height=\"500\"}\n\n::: {.aside}\n[created: 1859]\n:::\n\n## Charles Joseph Minard (1781-1870) {.medium}\n\n![](img/minard.png){fig-align=\"center\"}\n\n::: {.aside}\n[created: 1869]\n:::\n\n## W.E.B. Du Bois (1868-1963) {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/dubois1.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column}\n![](img/dubois2.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[created: 1890]\n:::\n\n## Otto Neurath (1882-1945) {.medium}\n\n![](img/neurath.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[created: 1943]\n:::\n\n# Five guidelines for better visualization\n\n<center>\n![](../../data/img/avatar_laptop.png){width=250}\n</center>\n\n::: footer\n:::\n\n## 1. Choose the adequate type of graph {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n![](index_files/figure-revealjs/unnamed-chunk-1-1.png){width=211.2}\n\n</div>\n<br><br><br><br><br><br><br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n![](index_files/figure-revealjs/unnamed-chunk-2-1.png){width=211.2}\n\n</div>\n:::\n::: {.column width=70%}\n- Choose a chart type with respect to your data (numeric, categorical, ranking, time series etc.)\n- What would you like to show: comparison, distribution, composition, relationship?\n- To help you find the adequate type from a myriad of alternatives, you can also take a look at [https://www.data-to-viz.com](https://www.data-to-viz.com) and [https://datavizproject.com](https://datavizproject.com)\n:::\n:::\n\n## A simple decision tree of chart types {.medium}\n\n![](img/charttypes.webp){fig-align=\"center\" height=\"530\"}\n\n\n## 2. Visualize data accurately and faithfully {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Prioritize data accuracy, clarity, and integrity\n- Avoid misleading the reader by truncating the y-axis, using two different y-axis, cherry-picking data, not providing context, etc.\n- A good story based on data visualization does not involve deceptive manipulation of the data!\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Example {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/accuracy1.jpeg){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/accuracy2.jpg){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nSource: [Patient](https://patient.info/news-and-features/whats-the-average-height-for-men)\n:::\n\n## Another example {.medium}\n\n::: {.columns}\n::: {.column width=50%}\n![](img/trumptweet.png){height=\"450\"}\n:::\n::: {.column width=50% .fragment}\n<br>\n![](img/voting-election.gif){style=\"border: 1px solid;\"}\n:::\n:::\n\n## A third example {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/migration1.png){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/migration2.png){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nSource: [The Correspondent](https://thecorrespondent.com/664/how-maps-in-the-media-make-us-more-negative-about-migrants/738023272448-bac255ba)\n:::\n\n## 3. Integrate graphics and text {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3a.png){height=250 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3b.png){style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Don't make people turn their head to read labels\n- Think about a logical order of the chart (alphabetical, values)\n- Add direct labels rather than a legend\n- Choose a meaningful title that focuses on your message\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Best practice {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/annotation1.jpeg)\n:::\n::: {.column .fragment}\n![](img/annotation2.jpeg)\n:::\n:::\n\n::: {.aside}\nSources: [Washington Post](https://www.washingtonpost.com/business/2019/06/06/why-crowded-meetings-conference-rooms-make-you-so-so-tired/), [chezVoila](https://twitter.com/chezVoila/status/1136631524919513088?s=20)\n:::\n\n\n## 4. Reduce the clutter {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Unnecessary visual elements distract the readers from the central data\n- Avoid elements that do not contain information!\n- Basic elements like heavy tick marks or gridlines should be removed\n- Think carefully which visual elements are really needed to read the chart\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Best practice {.medium}\n\n\n::: {.columns}\n::: {.column}\n![](img/clutter1.png)\n:::\n::: {.column .fragment}\n![](img/clutter2.png){height=\"400\"}\n:::\n:::\n\n::: {.fragment .absolute top=\"15%\" left=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/clutter-1.png){width=576}\n:::\n:::\n\n:::\n\n::: {.aside}\nSources: [BlueGranite](https://www.bluegranite.com/blog/data-visualization-remove-chart-clutter-and-focus-on-the-insights)\n:::\n\n\n## 5. Avoid the spaghetti chart and start with gray {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n![](index_files/figure-revealjs/unnamed-chunk-3-1.png){width=220.8}\n\n</div>\n<br><br><br><br><br><br><br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n\n![](index_files/figure-revealjs/unnamed-chunk-4-1.png){width=211.2}\n\n</div>\n:::\n::: {.column width=70%}\n- When the graph contains too much information, it looks like spaghetti\n- Try to break overloaded single charts into smaller parts (facets, small multiples) or highlight the relevant information\n- Start with gray: you are forced to be strategic in the use of color, labels, etc.\n:::\n:::\n\n\n## Best practice {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/spaghetti1.png)\n:::\n::: {.column .fragment}\n![](img/spaghetti2.png)\n:::\n:::\n\n::: {.aside}\nSource: @schwabish:2014\n:::\n\n## Deceptive graphs {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/deceptive_bar.png)\n:::\n::: {.column}\n![](img/deceptive_line.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Deceptive graphs {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/deceptive_pie.png)\n:::\n::: {.column}\n![](img/deceptive_bubble.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n\n## Misleading titles {.medium}\n\n![](img/deceptive_title.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Deceptive graphs meet their goal {.medium}\n\n![](img/deceptive_results.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n\n# The Gestalt Principles\n\n<center>\n![](../../data/img/avatar_finger.png){width=250}\n</center>\n\n::: footer\n:::\n\n## What are the Gestalt Principles? {.smaller}\n\nGestalt Principles describe how humans group similar elements, recognize patterns and simplify complex images. \"Gestalt\" is German for \"unified whole\". \n\n![](img/gestalt_header2.png){height=\"250\" fig-align=\"center\"}\n\nThe question is how humans typically gain meaningful perceptions from the chaotic stimuli around them. The idea is that the mind \"informs\" what the eye sees by perceiving a series of individual elements as a whole.\n\n## Which chart is random and which has structure in it? {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/random1.png)\n:::\n::: {.column}\n![](img/random2.png)\n:::\n:::\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n## Gestalt rules {.smaller}\n\n- [Proximity]{.hl .hl-dred .secfont} Things that are spatially near to one another seem to be related.\n- [Similarity]{.hl .hl-blue .secfont} Things that look alike seem to be related.\n- [Connection]{.hl .hl-dred .secfont} Things that are visually tied to one another seem to be related.\n- [Continuity]{.hl .hl-blue .secfont} Partially hidden objects are completed into familiar shapes.\n- [Closure]{.hl .hl-dred .secfont} Incomplete shapes are perceived as complete.\n- [Figure and Ground]{.hl .hl-blue .secfont} Visual elements are taken to be either in the foreground or the background.\n- [Common Fate]{.hl .hl-dred .secfont} Elements sharing a direction of movement are perceived as a unit.\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n## Our brains look for structure {.medium}\n\n![](img/gestalt.png){fig-align=\"center\" height=500}\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n\n# Let's start with {ggplot}\n\n<center>\n![](../../data/img/avatar_cool.png){width=250}\n</center>\n\n::: footer\n:::\n\n## The grammar of {ggplot} {.smaller}\n\n::: {.tbl-classic .tbl-larger}\n| Component | Function | Explanation |\n|-----------|----------|-------------|\n| Data | ggplot(data) | The raw data that you want to visualise. |\n| Aesthetics | aes() | Aesthetic mappings between variables and visual properties. |\n| Geometries | geom_*() | The geometric shapes representing the data. |\n| Statistics | stat_*() | The statistical transformations applied to the data. |\n| Scales | scale_*() | Maps between the data and the aesthetic dimensions. |\n| Coordinate System\t| coord_*() | Maps data into the plane of the data rectangle. |\n| Facets | facet_*() | The arrangement of the data into a grid of plots. |\n| Visual Themes | theme() | The overall visual defaults of a plot. |\n: {tbl-colwidths=\"[25,20,55]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## Geometries and aesthetic mapping {.medium}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|2|3|4\"}\ndata |>  \n  ggplot(aes(x = year, y = value, color = category)) +\n  geom_point(alpha = 0.5, shape = 21) +\n  scale_color_manual(values = c(\"red\", \"blue\", \"yellow\"))\n```\n:::\n\n\n<br>\n\n::: {.tbl-classic .tbl-smaller}\n| Geometries | Aesthetics | Scales | Dimensions |\n|------------|------------|--------|------------|\n| points | positions (x, y) | scale_x_\\*(), scale_y_\\*() | position (continuous, discrete, reverse, log10, sqrt, date) |\n| lines | colors (color, fill) | scale_color_\\*(), <br> scale_fill_\\*() | colors (continuous, discrete, manual, gradient, gradient2, brewer) |\n| polygons | shapes (shape, linetype) | scale_shape_\\*(), scale_linetype_\\*() | shapes (continuous, discrete, manual, ordinal) |\n| text | size (size) | scale_size_\\*(), scale_radius_\\*() | sizes (continuous, discrete, manual, ordinal, area, date) |\n| boxplot | transparency (alpha) | scale_alpha_\\*() | transparency (continuous, discrete, manual, ordinal, date) |\n| ...many more! | groupings (group) | | |\n: {tbl-colwidths=\"[15,20,25,40]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## First steps {.smaller}\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm)) +\n  geom_point(size = 1.5, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/facet-setup-1.png){width=576}\n:::\n:::\n\n\n## Colors {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,5\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/colors-1.png){width=576}\n:::\n:::\n\n\n## Scales {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/scales-1.png){width=576}\n:::\n:::\n\n\n## Labels {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/labels-1.png){width=576}\n:::\n:::\n\n\n## Annotation rather than legend {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10,15\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/annotation-1.png){width=576}\n:::\n:::\n\n\n## Themes {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"16,17,18,19\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/addthemes-1.png){width=576}\n:::\n:::\n\n\n## Calculate median and standard deviation {.smaller}\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\ndata_summary <- data |>\n  group_by(species) |>\n  summarise(across(c(bill_length_mm, bill_depth_mm),\n  list(median = ~median(., na.rm = TRUE), \n       sd = ~sd(., na.rm = TRUE))))\n\ndata_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  species   bill_length_mm_median bill_length_mm_sd bill_depth_mm_median\n  <fct>                     <dbl>             <dbl>                <dbl>\n1 Adelie                     38.8              2.66                 18.4\n2 Chinstrap                  49.6              3.34                 18.4\n3 Gentoo                     47.3              3.08                 15  \n# ℹ 1 more variable: bill_depth_mm_sd <dbl>\n```\n:::\n:::\n\n\n## Median {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\"}\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  geom_errorbar(\n    data = data_summary,\n    aes(x = bill_length_mm_median,\n      ymin = bill_depth_mm_median - bill_depth_mm_sd,\n      ymax = bill_depth_mm_median + bill_depth_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .5, size = .8) +\n  geom_errorbar(\n    data = data_summary,\n    aes(y = bill_depth_mm_median,\n      xmin = bill_length_mm_median - bill_length_mm_sd,\n      xmax = bill_length_mm_median + bill_length_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .25, size = .8) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), color = MetBrewer::met.brewer(\"Lakota\")[1:3], label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/addmedian-1.png){width=576}\n:::\n:::\n\n\n## Final plot {.smaller}\n\n::: {.absolute left=15%}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/final-1.png){width=672}\n:::\n:::\n\n:::\n\n## Bibliography {.bibstyle}\n\n:::footer\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}