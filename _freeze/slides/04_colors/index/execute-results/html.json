{
  "hash": "69a8c9f3f0450f1dc925fd3dd419b682",
  "result": {
    "markdown": "---\nmetadata-files: \n    - ../../_variables.yml\ntitle: |\n    <span class='fa-stack course-icon'>\n        <i class='fas {{< var course.icon-bg >}} fa-stack-2x blue'></i>\n        <i class='fas {{< var course.icon >}} fa-stack-1x fa-inverse' style='margin-top:-5pt'></i>\n      </span><br>\n    {{< var course.subtitle >}}\nauthor: \"{{< var instructor.name >}}\"  \nsubtitle: Colors\ndate: October 30, 2023\ndate-format: long\nfrom: markdown+emoji\nbibliography: ../../data/lit/wipol_advanced.bib\ncsl: ../../data/lit/wipol.csl\nexecute:\n  freeze: auto\n  echo: true\n  fig-width: 6\n  fig-height: 5\nformat:\n  revealjs:\n    theme: ../econpol_slides.scss\n    footer: '{{< var course.number >}} {{< var course.title >}} | {{< var course.semester >}}'\n    logo: ../../data/img/wu-logo-simple.png\n    header-includes: |\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\" rel=\"stylesheet\"/>\n    slide-number: true\n    show-slide-number: all\n    transition: fade\n    progress: true\n    multiplex: false\n    scrollable: true\n    preview-links: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    pause: true\n---\n\n\n# All colours are beautiful\n\n<center>\n![](../../data/img/avatar_sweatshirt.png){width=250}\n</center>\n\n::: footer\n:::\n\n## Colors in R {.medium}\n\nYou can assign colors by [names]{.hl .hl-dred} \n\n- \"red\", \"green\", \"chocolate\", \"cadetblue\", etc.\n- See a complete list of the 657 colors typing [colors()]{.secfont}\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n [5] \"antiquewhite2\" \"antiquewhite3\" \"antiquewhite4\" \"aquamarine\"   \n [9] \"aquamarine1\"   \"aquamarine2\"   \"aquamarine3\"   \"aquamarine4\"  \n```\n:::\n:::\n\n\n. . .\n\n<br> \nAlternatively, you can use [hex color codes]{.hl .hl-dred}\n\n- #F8766D, #00BA38, #619CFF, etc.\n- Use color picker to get hex code, e.g. [https://htmlcolorcodes.com](https://htmlcolorcodes.com)\n\n\n## Color palettes of {RColorBrewer} {.smaller}\n\n::: {.columns}\n::: {.column width=\"33%\" .center}\nSequential\n\n[Use to encode numerical information *with order*]{style=\"font-size:1.3rem;\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/seq-1.png){width=576}\n:::\n:::\n\n:::\n::: {.column width=\"33%\" .center .fragment}\nDiverging\n\n[Use to encode numerical information with *critical midpoint*]{style=\"font-size:1.3rem;\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/div-1.png){width=576}\n:::\n:::\n\n:::\n::: {.column width=\"33%\" .center .fragment}\nQualitative\n\n[Use to encode *categorical* information]{style=\"font-size:1.3rem;\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/qual-1.png){width=576}\n:::\n:::\n\n:::\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## Color blindness {.smaller}\n\n::: {.columns}\n::: {.column}\nYou may check whether the color scale works for people who can distinguish fewer colours than others with [{colorBlindness}]{.secfont}.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/cblind-1.png){width=576}\n:::\n:::\n\n:::\n::: {.column .fragment}\nThe [viridis]{.secfont} color scale is discriminable under the most common forms of colour blindness, and reproduces well in greyscale.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/viridis-1.png){width=576}\n:::\n:::\n\n:::\n:::\n\n## Fancy palettes {.medium}\n\n::: {.columns}\n::: {.column .center}\n[[{MetBrewer}]{.secfont}](https://github.com/BlakeRMills/MetBrewer)\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/met-1.png){width=576}\n:::\n:::\n\n:::\n::: {.column .center}\n[[{wesanderson}]{.secfont}](https://github.com/karthik/wesanderson)\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/wes-1.png){width=576}\n:::\n:::\n\n:::\n:::\n\n\n## Color scales in {ggplot} {.smaller}\n\n::: {.center .secfont style=\"font-size:2.5rem;\"}\nscale_color_\\* <br> scale_fill_\\*\n:::\n\n::: {.columns}\n::: {.column .center}\nContinuous: \n\n- [ continuous(type)]{.secfont}\n- [distiller(palette)]{.secfont}\n- [gradient(high, low)]{.secfont}\n- [gradient2(high, mid, low)]{.secfont}\n- [gradientn(colours)]{.secfont}\n- [viridis_c(option)]{.secfont}\n:::\n::: {.column .center}\nDiscrete:\n\n- [manual(values)]{.secfont}\n- [brewer(palette)]{.secfont}\n- [grey(start, end)]{.secfont}\n- [viridis_d(option)]{.secfont}\n:::\n:::\n\n\n## Bibliography {.bibstyle}\n\n:::footer\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}