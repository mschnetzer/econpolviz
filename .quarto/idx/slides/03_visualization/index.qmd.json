{"title":"<span class='fa-stack course-icon'>\n    <i class='fas {{< var course.icon-bg >}} fa-stack-2x blue'></i>\n    <i class='fas {{< var course.icon >}} fa-stack-1x fa-inverse' style='margin-top:-5pt'></i>\n  </span><br>\n{{< var course.subtitle >}}","markdown":{"yaml":{"metadata-files":["../../_variables.yml"],"title":"<span class='fa-stack course-icon'>\n    <i class='fas {{< var course.icon-bg >}} fa-stack-2x blue'></i>\n    <i class='fas {{< var course.icon >}} fa-stack-1x fa-inverse' style='margin-top:-5pt'></i>\n  </span><br>\n{{< var course.subtitle >}}\n","author":"{{< var instructor.name >}}","subtitle":"Visualization","date":"March 20, 2023","date-format":"long","from":"markdown+emoji","bibliography":"../../data/lit/wipol_advanced.bib","csl":"../../data/lit/wipol.csl","execute":{"freeze":"auto","echo":true,"fig-width":6,"fig-height":5},"format":{"revealjs":{"theme":"../econpol_slides.scss","footer":"{{< var course.number >}} {{< var course.title >}} | {{< var course.semester >}}","logo":"../../data/img/wu-logo-simple.png","header-includes":"<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\" rel=\"stylesheet\"/>\n","slide-number":true,"show-slide-number":"all","transition":"fade","progress":true,"multiplex":false,"scrollable":true,"preview-links":false,"hide-inactive-cursor":true,"highlight-style":"printing","pause":true}}},"headingText":"Pioneers of data visualization","containsRefs":false,"markdown":"\n\n\n\n<center>\n![](../../data/img/avatar_sakko.png){width=250}\n</center>\n\n::: footer\n:::\n\n## William Playfair (1759-1823) {.medium}\n\n![](img/playfair.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[created: 1786]\n:::\n\n## John Snow (1813-1858) {.medium}\n\n::: {.columns}\n::: {.column width=60%}\n![](img/cholera_large.jpg){height=\"450\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column width=35%}\n![](img/cholera_detail.png){height=\"450\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[created: 1854]\n:::\n\n## Charles Joseph Minard (1781-1870) {.medium}\n\n![](img/minard.png){fig-align=\"center\"}\n\n::: {.aside}\n[created: 1869]\n:::\n\n## W.E.B. Du Bois (1868-1963) {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/dubois1.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column}\n![](img/dubois2.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[created: 1890]\n:::\n\n## Otto Neurath (1882-1945) {.medium}\n\n![](img/neurath.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[created: 1943]\n:::\n\n# Five guidelines for better visualization\n\n<center>\n![](../../data/img/avatar_laptop.png){width=250}\n</center>\n\n::: footer\n:::\n\n## 1. Choose the adequate type of graph {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.2\n#| fig.height: 2.4\nlibrary(tidyverse)\nsalesdata <- tribble(\n  ~department, ~sales,\n  \"A\",950,\n  \"B\",1350,\n  \"C\",490,\n  \"D\",2000,\n  \"E\",100,\n  \"F\",100\n)\nsalesdata |> ggplot(aes(x=department, y=sales, group=1)) +\ngeom_point() +\ngeom_line() +\nlabs(x=NULL, y=NULL, title = \"Travel expenses by department\") +\ntheme_minimal() +\ntheme(plot.title = element_text(size=10),\nplot.title.position = \"plot\")\n```\n</div>\n<br><br><br><br><br><br><br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.2\n#| fig.height: 2.4\nsalesdata |> ggplot(aes(x=department, y=sales)) +\ngeom_bar(stat=\"identity\", width = 0.6) +\nscale_y_continuous(labels = scales::dollar) +\nlabs(x=NULL, y=NULL, title = \"Travel expenses by department\") +\ntheme_minimal() +\ntheme(plot.title = element_text(size=10),\nplot.title.position = \"plot\",\npanel.grid.major.x = element_blank(),\npanel.grid.minor.y = element_blank())\n```\n</div>\n:::\n::: {.column width=70%}\n- Choose a chart type with respect to your data (numeric, categorical, ranking, time series etc.)\n- What would you like to show: comparison, distribution, composition, relationship?\n- To help you find the adequate type from a myriad of alternatives, you can also take a look at [https://www.data-to-viz.com](https://www.data-to-viz.com) and [https://datavizproject.com](https://datavizproject.com)\n:::\n:::\n\n## A simple decision tree of chart types {.medium}\n\n![](img/charttypes.webp){fig-align=\"center\" height=\"530\"}\n\n\n## 2. Visualize data accurately and faithfully {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Prioritize data accuracy, clarity, and integrity\n- Avoid misleading the reader by truncating the y-axis, using two different y-axis, cherry-picking data, not providing context, etc.\n- A good story based on data visualization does not involve deceptive manipulation of the data!\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Example {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/accuracy1.jpeg){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/accuracy2.jpg){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nSource: [Patient](https://patient.info/news-and-features/whats-the-average-height-for-men)\n:::\n\n## Another example {.medium}\n\n::: {.columns}\n::: {.column width=50%}\n![](img/trumptweet.png){height=\"450\"}\n:::\n::: {.column width=50% .fragment}\n<br>\n![](img/voting-election.gif){style=\"border: 1px solid;\"}\n:::\n:::\n\n## A third example {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/migration1.png){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/migration2.png){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nSource: [The Correspondent](https://thecorrespondent.com/664/how-maps-in-the-media-make-us-more-negative-about-migrants/738023272448-bac255ba)\n:::\n\n## 3. Integrate graphics and text {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3a.png){height=250 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3b.png){style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Don't make people turn their head to read labels\n- Think about a logical order of the chart (alphabetical, values)\n- Add direct labels rather than a legend\n- Choose a meaningful title that focuses on your message\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Best practice {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/annotation1.jpeg)\n:::\n::: {.column .fragment}\n![](img/annotation2.jpeg)\n:::\n:::\n\n::: {.aside}\nSources: [Washington Post](https://www.washingtonpost.com/business/2019/06/06/why-crowded-meetings-conference-rooms-make-you-so-so-tired/), [chezVoila](https://twitter.com/chezVoila/status/1136631524919513088?s=20)\n:::\n\n\n## 4. Reduce the clutter {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Unnecessary visual elements distract the readers from the central data\n- Avoid elements that do not contain information!\n- Basic elements like heavy tick marks or gridlines should be removed\n- Think carefully which visual elements are really needed to read the chart\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Best practice {.medium}\n\n\n::: {.columns}\n::: {.column}\n![](img/clutter1.png)\n:::\n::: {.column .fragment}\n![](img/clutter2.png){height=\"400\"}\n:::\n:::\n\n::: {.fragment .absolute top=\"15%\" left=\"50%\"}\n```{r clutter}\n#| echo: false\n#| fig.width: 6\n#| fig.height: 5\nlibrary(tidyverse)\ndata <- tribble(~area, ~inflation,\n\"St. Louis\", 3.2,\n\"Seattle\", 3.1,\n\"Atlanta\", 2.9,\n\"Chicago\", 2.8,\n\"Detroit\", 2.4,\n\"Houston\", 2.4,\n\"Los Angeles\", 2.2,\n\"New York\", 1.8,\n\"Anchorage\", 1.1,\n\"Pittsburgh\", 0.8)\ndata |> ggplot(aes(x = reorder(area, inflation), y = inflation)) +\ngeom_hline(yintercept = 2.4, linewidth=0.3) +\ngeom_bar(stat = \"identity\", width=0.7, aes(fill = inflation > 2.4)) +\nannotate(\"text\",y=2.45,x=1, label=\"National\\nAverage: 2.4%\", hjust = 0, family=\"Roboto\", size=3) +\ngeom_text(aes(y = 0.05, label = paste0(inflation,\"%\")), size = 3, family = \"Roboto\", hjust=0, color=\"white\", fontface=\"bold\") +\nscale_fill_manual(values = c(MetBrewer::met.brewer(\"Lakota\")[c(1,3)])) +\ncoord_flip() +\nlabs(x = NULL, y = NULL,\ntitle = \"Highest food price inflation in St. Louis and Seattle\",\nsubtitle = \"Annual grocery store inflation, 2014\") +\ntheme_minimal() +\ntheme(panel.grid = element_blank(),\naxis.text.y = element_text(family=\"Roboto\", face=\"bold\",size=10),\naxis.text.x = element_blank(),\nlegend.position=\"none\",\nplot.title = element_text(family=\"Roboto\", face=\"bold\"),\nplot.subtitle = element_text(family=\"Roboto\"),\nplot.title.position = \"plot\")\n```\n:::\n\n::: {.aside}\nSources: [BlueGranite](https://www.bluegranite.com/blog/data-visualization-remove-chart-clutter-and-focus-on-the-insights)\n:::\n\n\n## 5. Avoid the spaghetti chart and start with gray {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.3\n#| fig.height: 2.4\nset.seed(10)\nsimdat <- tibble(name=LETTERS[1:15], `2000`=sample(1:20,15), `2010`=sample(1:20,15), `2020`=sample(1:20,15)) |> pivot_longer(-name, names_to=\"years\",values_to=\"value\")\nsimdat |>\n  ggplot(aes(x=years, y=value, group=name, color=name)) +\n  geom_line() +\n  geom_text(aes(label=name), hjust=-0.3, data = simdat |> filter(years==2020), size = 2.5) +\n  scale_x_discrete(expand = c(0.07,0)) +\n  labs(x = NULL, y = NULL) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n</div>\n<br><br><br><br><br><br><br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.2\n#| fig.height: 2.4\nsimdat |>\n  ggplot(aes(x=years, y=value, group=name, color = name)) +\n  geom_line(size = 0.3) +\n  geom_line(data = simdat |> filter(name %in% c(\"A\",\"O\")), size = 1.2) +\n  geom_text(aes(label=name), hjust=-0.3, data = simdat |> filter(years==2020), size = 2.5) +\n  scale_color_manual(values = c(\"red\", rep(\"gray80\",13), \"olivedrab\")) +\n  scale_x_discrete(expand = c(0.07,0)) +\n  labs(x = NULL, y = NULL) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  panel.grid.minor.y = element_blank())\n```\n</div>\n:::\n::: {.column width=70%}\n- When the graph contains too much information, it looks like spaghetti\n- Try to break overloaded single charts into smaller parts (facets, small multiples) or highlight the relevant information\n- Start with gray: you are forced to be strategic in the use of color, labels, etc.\n:::\n:::\n\n\n## Best practice {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/spaghetti1.png)\n:::\n::: {.column .fragment}\n![](img/spaghetti2.png)\n:::\n:::\n\n::: {.aside}\nSource: @schwabish:2014\n:::\n\n## Deceptive graphs {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/deceptive_bar.png)\n:::\n::: {.column}\n![](img/deceptive_line.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Deceptive graphs {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/deceptive_pie.png)\n:::\n::: {.column}\n![](img/deceptive_bubble.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n\n## Misleading titles {.medium}\n\n![](img/deceptive_title.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Deceptive graphs meet their goal {.medium}\n\n![](img/deceptive_results.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n\n# The Gestalt Principles\n\n<center>\n![](../../data/img/avatar_finger.png){width=250}\n</center>\n\n::: footer\n:::\n\n## What are the Gestalt Principles? {.smaller}\n\nGestalt Principles describe how humans group similar elements, recognize patterns and simplify complex images. \"Gestalt\" is German for \"unified whole\". \n\n![](img/gestalt_header2.png){height=\"250\" fig-align=\"center\"}\n\nThe question is how humans typically gain meaningful perceptions from the chaotic stimuli around them. The idea is that the mind \"informs\" what the eye sees by perceiving a series of individual elements as a whole.\n\n## Which chart is random and which has structure in it? {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/random1.png)\n:::\n::: {.column}\n![](img/random2.png)\n:::\n:::\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n## Gestalt rules {.smaller}\n\n- [Proximity]{.hl .hl-dred .secfont} Things that are spatially near to one another seem to be related.\n- [Similarity]{.hl .hl-blue .secfont} Things that look alike seem to be related.\n- [Connection]{.hl .hl-dred .secfont} Things that are visually tied to one another seem to be related.\n- [Continuity]{.hl .hl-blue .secfont} Partially hidden objects are completed into familiar shapes.\n- [Closure]{.hl .hl-dred .secfont} Incomplete shapes are perceived as complete.\n- [Figure and Ground]{.hl .hl-blue .secfont} Visual elements are taken to be either in the foreground or the background.\n- [Common Fate]{.hl .hl-dred .secfont} Elements sharing a direction of movement are perceived as a unit.\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n## Our brains look for structure {.medium}\n\n![](img/gestalt.png){fig-align=\"center\" height=500}\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n\n# Let's start with {ggplot}\n\n<center>\n![](../../data/img/avatar_cool.png){width=250}\n</center>\n\n::: footer\n:::\n\n## The grammar of {ggplot} {.smaller}\n\n::: {.tbl-classic .tbl-larger}\n| Component | Function | Explanation |\n|-----------|----------|-------------|\n| Data | ggplot(data) | The raw data that you want to visualise. |\n| Aesthetics | aes() | Aesthetic mappings between variables and visual properties. |\n| Geometries | geom_*() | The geometric shapes representing the data. |\n| Statistics | stat_*() | The statistical transformations applied to the data. |\n| Scales | scale_*() | Maps between the data and the aesthetic dimensions. |\n| Coordinate System\t| coord_*() | Maps data into the plane of the data rectangle. |\n| Facets | facet_*() | The arrangement of the data into a grid of plots. |\n| Visual Themes | theme() | The overall visual defaults of a plot. |\n: {tbl-colwidths=\"[25,20,55]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## Geometries and aesthetic mapping {.medium}\n\n```{r}\n#| eval: false\n#| echo: true\n#| code-line-numbers: \"1|2|3|4\"\ndata + \n  ggplot(aes(x = year, y = value, color = category)) +\n  geom_point(alpha = 0.5, shape = 21) +\n  scale_color_manual(values = c(\"red\", \"blue\", \"yellow\"))\n```\n\n<br>\n\n::: {.tbl-classic .tbl-smaller}\n| Geometries | Aesthetics | Scales | Dimensions |\n|------------|------------|--------|------------|\n| points | positions (x, y) | scale_x_\\*(), scale_y_\\*() | position (continuous, discrete, reverse, log10, sqrt, date) |\n| lines | colors (color, fill) | scale_color_\\*(), <br> scale_fill_\\*() | colors (continuous, discrete, manual, gradient, gradient2, brewer) |\n| polygons | shapes (shape, linetype) | scale_shape_\\*(), scale_linetype_\\*() | shapes (continuous, discrete, manual, ordinal) |\n| text | size (size) | scale_size_\\*(), scale_radius_\\*() | sizes (continuous, discrete, manual, ordinal, area, date) |\n| boxplot | transparency (alpha) | scale_alpha_\\*() | transparency (continuous, discrete, manual, ordinal, date) |\n| ...many more! | groupings (group) | | |\n: {tbl-colwidths=\"[15,20,25,40]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## First steps {.smaller}\n\n```{r}\n#| label: load-packages\n#| include: false\n#| purl: false\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(colorspace)\nlibrary(palmerpenguins)\ndata <- penguins\n```\n\n```{r}\n#| label: facet-setup\n#| output-location: column\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm)) +\n  geom_point(size = 1.5, alpha = 0.5)\n```\n\n## Colors {.smaller}\n\n```{r}\n#| label: colors\n#| output-location: column\n#| code-line-numbers: \"3,5\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  theme_minimal()\n```\n\n## Scales {.smaller}\n\n```{r}\n#| label: scales\n#| output-location: column\n#| code-line-numbers: \"5,6,7\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  theme_minimal()\n```\n\n## Labels {.smaller}\n\n```{r}\n#| label: labels\n#| output-location: column\n#| code-line-numbers: \"8,9,10\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal()\n```\n\n## Annotation rather than legend {.smaller}\n\n```{r}\n#| label: annotation\n#| output-location: column\n#| code-line-numbers: \"8,9,10,15\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n## Themes {.smaller}\n\n```{r}\n#| label: addthemes\n#| output-location: column\n#| code-line-numbers: \"16,17,18,19\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n## Calculate median and standard deviation {.smaller}\n\n```{r}\n#| label: calcmed\n#| output-location: fragment\ndata_summary <- data |>\n  group_by(species) |>\n  summarise(across(c(bill_length_mm, bill_depth_mm),\n  list(median = ~median(., na.rm = TRUE), \n       sd = ~sd(., na.rm = TRUE))))\n\ndata_summary\n```\n\n## Median {.smaller}\n\n```{r}\n#| label: addmedian\n#| output-location: column\n#| code-line-numbers: \"5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  geom_errorbar(\n    data = data_summary,\n    aes(x = bill_length_mm_median,\n      ymin = bill_depth_mm_median - bill_depth_mm_sd,\n      ymax = bill_depth_mm_median + bill_depth_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .5, size = .8) +\n  geom_errorbar(\n    data = data_summary,\n    aes(y = bill_depth_mm_median,\n      xmin = bill_length_mm_median - bill_length_mm_sd,\n      xmax = bill_length_mm_median + bill_length_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .25, size = .8) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), color = MetBrewer::met.brewer(\"Lakota\")[1:3], label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n## Final plot {.smaller}\n\n::: {.absolute left=15%}\n```{r}\n#| label: final\n#| echo: false\n#| fig-width: 7\n#| fig-height: 5.5\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_errorbar(\n    data = data_summary,\n    aes(x = bill_length_mm_median,\n      ymin = bill_depth_mm_median - bill_depth_mm_sd,\n      ymax = bill_depth_mm_median + bill_depth_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .5, size = .8) +\n  geom_errorbar(\n    data = data_summary,\n    aes(y = bill_depth_mm_median,\n      xmin = bill_length_mm_median - bill_length_mm_sd,\n      xmax = bill_length_mm_median + bill_length_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .25, size = .8) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(name = NULL,\n                    values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), color = MetBrewer::met.brewer(\"Lakota\")[1:3], label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n:::\n\n## Bibliography {.bibstyle}\n\n:::footer\n:::","srcMarkdownNoYaml":"\n\n\n# Pioneers of data visualization\n\n<center>\n![](../../data/img/avatar_sakko.png){width=250}\n</center>\n\n::: footer\n:::\n\n## William Playfair (1759-1823) {.medium}\n\n![](img/playfair.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[created: 1786]\n:::\n\n## John Snow (1813-1858) {.medium}\n\n::: {.columns}\n::: {.column width=60%}\n![](img/cholera_large.jpg){height=\"450\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column width=35%}\n![](img/cholera_detail.png){height=\"450\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[created: 1854]\n:::\n\n## Charles Joseph Minard (1781-1870) {.medium}\n\n![](img/minard.png){fig-align=\"center\"}\n\n::: {.aside}\n[created: 1869]\n:::\n\n## W.E.B. Du Bois (1868-1963) {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/dubois1.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n\n::: {.column}\n![](img/dubois2.png){height=\"500\" style=\"border: 1px solid;\"}\n:::\n:::\n\n::: {.aside}\n[created: 1890]\n:::\n\n## Otto Neurath (1882-1945) {.medium}\n\n![](img/neurath.png){height=\"500\" fig-align=\"center\"}\n\n::: {.aside}\n[created: 1943]\n:::\n\n# Five guidelines for better visualization\n\n<center>\n![](../../data/img/avatar_laptop.png){width=250}\n</center>\n\n::: footer\n:::\n\n## 1. Choose the adequate type of graph {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.2\n#| fig.height: 2.4\nlibrary(tidyverse)\nsalesdata <- tribble(\n  ~department, ~sales,\n  \"A\",950,\n  \"B\",1350,\n  \"C\",490,\n  \"D\",2000,\n  \"E\",100,\n  \"F\",100\n)\nsalesdata |> ggplot(aes(x=department, y=sales, group=1)) +\ngeom_point() +\ngeom_line() +\nlabs(x=NULL, y=NULL, title = \"Travel expenses by department\") +\ntheme_minimal() +\ntheme(plot.title = element_text(size=10),\nplot.title.position = \"plot\")\n```\n</div>\n<br><br><br><br><br><br><br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.2\n#| fig.height: 2.4\nsalesdata |> ggplot(aes(x=department, y=sales)) +\ngeom_bar(stat=\"identity\", width = 0.6) +\nscale_y_continuous(labels = scales::dollar) +\nlabs(x=NULL, y=NULL, title = \"Travel expenses by department\") +\ntheme_minimal() +\ntheme(plot.title = element_text(size=10),\nplot.title.position = \"plot\",\npanel.grid.major.x = element_blank(),\npanel.grid.minor.y = element_blank())\n```\n</div>\n:::\n::: {.column width=70%}\n- Choose a chart type with respect to your data (numeric, categorical, ranking, time series etc.)\n- What would you like to show: comparison, distribution, composition, relationship?\n- To help you find the adequate type from a myriad of alternatives, you can also take a look at [https://www.data-to-viz.com](https://www.data-to-viz.com) and [https://datavizproject.com](https://datavizproject.com)\n:::\n:::\n\n## A simple decision tree of chart types {.medium}\n\n![](img/charttypes.webp){fig-align=\"center\" height=\"530\"}\n\n\n## 2. Visualize data accurately and faithfully {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ2b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Prioritize data accuracy, clarity, and integrity\n- Avoid misleading the reader by truncating the y-axis, using two different y-axis, cherry-picking data, not providing context, etc.\n- A good story based on data visualization does not involve deceptive manipulation of the data!\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Example {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/accuracy1.jpeg){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/accuracy2.jpg){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nSource: [Patient](https://patient.info/news-and-features/whats-the-average-height-for-men)\n:::\n\n## Another example {.medium}\n\n::: {.columns}\n::: {.column width=50%}\n![](img/trumptweet.png){height=\"450\"}\n:::\n::: {.column width=50% .fragment}\n<br>\n![](img/voting-election.gif){style=\"border: 1px solid;\"}\n:::\n:::\n\n## A third example {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/migration1.png){height=\"450\" fig-align=\"center\"}\n:::\n::: {.column .fragment}\n![](img/migration2.png){height=\"450\" fig-align=\"center\"}\n:::\n:::\n\n::: {.aside}\nSource: [The Correspondent](https://thecorrespondent.com/664/how-maps-in-the-media-make-us-more-negative-about-migrants/738023272448-bac255ba)\n:::\n\n## 3. Integrate graphics and text {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3a.png){height=250 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/princ3b.png){style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Don't make people turn their head to read labels\n- Think about a logical order of the chart (alphabetical, values)\n- Add direct labels rather than a legend\n- Choose a meaningful title that focuses on your message\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Best practice {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/annotation1.jpeg)\n:::\n::: {.column .fragment}\n![](img/annotation2.jpeg)\n:::\n:::\n\n::: {.aside}\nSources: [Washington Post](https://www.washingtonpost.com/business/2019/06/06/why-crowded-meetings-conference-rooms-make-you-so-so-tired/), [chezVoila](https://twitter.com/chezVoila/status/1136631524919513088?s=20)\n:::\n\n\n## 4. Reduce the clutter {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4a.png){height=230 style=\"vertical-align:top;\"}\n<br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n![](img/principle4b.png){height=230 style=\"vertical-align:top;\"}\n:::\n::: {.column width=70%}\n- Unnecessary visual elements distract the readers from the central data\n- Avoid elements that do not contain information!\n- Basic elements like heavy tick marks or gridlines should be removed\n- Think carefully which visual elements are really needed to read the chart\n:::\n:::\n\n::: {.aside}\nSource: @dougherty:2021\n:::\n\n## Best practice {.medium}\n\n\n::: {.columns}\n::: {.column}\n![](img/clutter1.png)\n:::\n::: {.column .fragment}\n![](img/clutter2.png){height=\"400\"}\n:::\n:::\n\n::: {.fragment .absolute top=\"15%\" left=\"50%\"}\n```{r clutter}\n#| echo: false\n#| fig.width: 6\n#| fig.height: 5\nlibrary(tidyverse)\ndata <- tribble(~area, ~inflation,\n\"St. Louis\", 3.2,\n\"Seattle\", 3.1,\n\"Atlanta\", 2.9,\n\"Chicago\", 2.8,\n\"Detroit\", 2.4,\n\"Houston\", 2.4,\n\"Los Angeles\", 2.2,\n\"New York\", 1.8,\n\"Anchorage\", 1.1,\n\"Pittsburgh\", 0.8)\ndata |> ggplot(aes(x = reorder(area, inflation), y = inflation)) +\ngeom_hline(yintercept = 2.4, linewidth=0.3) +\ngeom_bar(stat = \"identity\", width=0.7, aes(fill = inflation > 2.4)) +\nannotate(\"text\",y=2.45,x=1, label=\"National\\nAverage: 2.4%\", hjust = 0, family=\"Roboto\", size=3) +\ngeom_text(aes(y = 0.05, label = paste0(inflation,\"%\")), size = 3, family = \"Roboto\", hjust=0, color=\"white\", fontface=\"bold\") +\nscale_fill_manual(values = c(MetBrewer::met.brewer(\"Lakota\")[c(1,3)])) +\ncoord_flip() +\nlabs(x = NULL, y = NULL,\ntitle = \"Highest food price inflation in St. Louis and Seattle\",\nsubtitle = \"Annual grocery store inflation, 2014\") +\ntheme_minimal() +\ntheme(panel.grid = element_blank(),\naxis.text.y = element_text(family=\"Roboto\", face=\"bold\",size=10),\naxis.text.x = element_blank(),\nlegend.position=\"none\",\nplot.title = element_text(family=\"Roboto\", face=\"bold\"),\nplot.subtitle = element_text(family=\"Roboto\"),\nplot.title.position = \"plot\")\n```\n:::\n\n::: {.aside}\nSources: [BlueGranite](https://www.bluegranite.com/blog/data-visualization-remove-chart-clutter-and-focus-on-the-insights)\n:::\n\n\n## 5. Avoid the spaghetti chart and start with gray {.medium}\n\n::: {.columns}\n::: {.column width=30%}\n[Bad:]{.hl .hl-dred .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.3\n#| fig.height: 2.4\nset.seed(10)\nsimdat <- tibble(name=LETTERS[1:15], `2000`=sample(1:20,15), `2010`=sample(1:20,15), `2020`=sample(1:20,15)) |> pivot_longer(-name, names_to=\"years\",values_to=\"value\")\nsimdat |>\n  ggplot(aes(x=years, y=value, group=name, color=name)) +\n  geom_line() +\n  geom_text(aes(label=name), hjust=-0.3, data = simdat |> filter(years==2020), size = 2.5) +\n  scale_x_discrete(expand = c(0.07,0)) +\n  labs(x = NULL, y = NULL) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n</div>\n<br><br><br><br><br><br><br>\n[Good:]{.hl .hl-green .secfont style=\"font-size:1.3rem;\"}\n<div style= \"float:right;position:relative;vertical-align:top;\">\n```{r}\n#| echo: false\n#| results: 'asis'\n#| fig.width: 2.2\n#| fig.height: 2.4\nsimdat |>\n  ggplot(aes(x=years, y=value, group=name, color = name)) +\n  geom_line(size = 0.3) +\n  geom_line(data = simdat |> filter(name %in% c(\"A\",\"O\")), size = 1.2) +\n  geom_text(aes(label=name), hjust=-0.3, data = simdat |> filter(years==2020), size = 2.5) +\n  scale_color_manual(values = c(\"red\", rep(\"gray80\",13), \"olivedrab\")) +\n  scale_x_discrete(expand = c(0.07,0)) +\n  labs(x = NULL, y = NULL) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  panel.grid.minor.y = element_blank())\n```\n</div>\n:::\n::: {.column width=70%}\n- When the graph contains too much information, it looks like spaghetti\n- Try to break overloaded single charts into smaller parts (facets, small multiples) or highlight the relevant information\n- Start with gray: you are forced to be strategic in the use of color, labels, etc.\n:::\n:::\n\n\n## Best practice {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/spaghetti1.png)\n:::\n::: {.column .fragment}\n![](img/spaghetti2.png)\n:::\n:::\n\n::: {.aside}\nSource: @schwabish:2014\n:::\n\n## Deceptive graphs {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/deceptive_bar.png)\n:::\n::: {.column}\n![](img/deceptive_line.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Deceptive graphs {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/deceptive_pie.png)\n:::\n::: {.column}\n![](img/deceptive_bubble.png)\n:::\n:::\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n\n## Misleading titles {.medium}\n\n![](img/deceptive_title.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n## Deceptive graphs meet their goal {.medium}\n\n![](img/deceptive_results.png)\n\n::: {.aside}\nQuelle: @lauer:2020\n:::\n\n\n# The Gestalt Principles\n\n<center>\n![](../../data/img/avatar_finger.png){width=250}\n</center>\n\n::: footer\n:::\n\n## What are the Gestalt Principles? {.smaller}\n\nGestalt Principles describe how humans group similar elements, recognize patterns and simplify complex images. \"Gestalt\" is German for \"unified whole\". \n\n![](img/gestalt_header2.png){height=\"250\" fig-align=\"center\"}\n\nThe question is how humans typically gain meaningful perceptions from the chaotic stimuli around them. The idea is that the mind \"informs\" what the eye sees by perceiving a series of individual elements as a whole.\n\n## Which chart is random and which has structure in it? {.medium}\n\n::: {.columns}\n::: {.column}\n![](img/random1.png)\n:::\n::: {.column}\n![](img/random2.png)\n:::\n:::\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n## Gestalt rules {.smaller}\n\n- [Proximity]{.hl .hl-dred .secfont} Things that are spatially near to one another seem to be related.\n- [Similarity]{.hl .hl-blue .secfont} Things that look alike seem to be related.\n- [Connection]{.hl .hl-dred .secfont} Things that are visually tied to one another seem to be related.\n- [Continuity]{.hl .hl-blue .secfont} Partially hidden objects are completed into familiar shapes.\n- [Closure]{.hl .hl-dred .secfont} Incomplete shapes are perceived as complete.\n- [Figure and Ground]{.hl .hl-blue .secfont} Visual elements are taken to be either in the foreground or the background.\n- [Common Fate]{.hl .hl-dred .secfont} Elements sharing a direction of movement are perceived as a unit.\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n## Our brains look for structure {.medium}\n\n![](img/gestalt.png){fig-align=\"center\" height=500}\n\n::: {.aside}\nSource: @healy:2018\n:::\n\n\n# Let's start with {ggplot}\n\n<center>\n![](../../data/img/avatar_cool.png){width=250}\n</center>\n\n::: footer\n:::\n\n## The grammar of {ggplot} {.smaller}\n\n::: {.tbl-classic .tbl-larger}\n| Component | Function | Explanation |\n|-----------|----------|-------------|\n| Data | ggplot(data) | The raw data that you want to visualise. |\n| Aesthetics | aes() | Aesthetic mappings between variables and visual properties. |\n| Geometries | geom_*() | The geometric shapes representing the data. |\n| Statistics | stat_*() | The statistical transformations applied to the data. |\n| Scales | scale_*() | Maps between the data and the aesthetic dimensions. |\n| Coordinate System\t| coord_*() | Maps data into the plane of the data rectangle. |\n| Facets | facet_*() | The arrangement of the data into a grid of plots. |\n| Visual Themes | theme() | The overall visual defaults of a plot. |\n: {tbl-colwidths=\"[25,20,55]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## Geometries and aesthetic mapping {.medium}\n\n```{r}\n#| eval: false\n#| echo: true\n#| code-line-numbers: \"1|2|3|4\"\ndata + \n  ggplot(aes(x = year, y = value, color = category)) +\n  geom_point(alpha = 0.5, shape = 21) +\n  scale_color_manual(values = c(\"red\", \"blue\", \"yellow\"))\n```\n\n<br>\n\n::: {.tbl-classic .tbl-smaller}\n| Geometries | Aesthetics | Scales | Dimensions |\n|------------|------------|--------|------------|\n| points | positions (x, y) | scale_x_\\*(), scale_y_\\*() | position (continuous, discrete, reverse, log10, sqrt, date) |\n| lines | colors (color, fill) | scale_color_\\*(), <br> scale_fill_\\*() | colors (continuous, discrete, manual, gradient, gradient2, brewer) |\n| polygons | shapes (shape, linetype) | scale_shape_\\*(), scale_linetype_\\*() | shapes (continuous, discrete, manual, ordinal) |\n| text | size (size) | scale_size_\\*(), scale_radius_\\*() | sizes (continuous, discrete, manual, ordinal, area, date) |\n| boxplot | transparency (alpha) | scale_alpha_\\*() | transparency (continuous, discrete, manual, ordinal, date) |\n| ...many more! | groupings (group) | | |\n: {tbl-colwidths=\"[15,20,25,40]\"}\n:::\n\n::: {.aside}\nSource: @scherer:2022\n:::\n\n## First steps {.smaller}\n\n```{r}\n#| label: load-packages\n#| include: false\n#| purl: false\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(colorspace)\nlibrary(palmerpenguins)\ndata <- penguins\n```\n\n```{r}\n#| label: facet-setup\n#| output-location: column\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm)) +\n  geom_point(size = 1.5, alpha = 0.5)\n```\n\n## Colors {.smaller}\n\n```{r}\n#| label: colors\n#| output-location: column\n#| code-line-numbers: \"3,5\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  theme_minimal()\n```\n\n## Scales {.smaller}\n\n```{r}\n#| label: scales\n#| output-location: column\n#| code-line-numbers: \"5,6,7\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  theme_minimal()\n```\n\n## Labels {.smaller}\n\n```{r}\n#| label: labels\n#| output-location: column\n#| code-line-numbers: \"8,9,10\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal()\n```\n\n## Annotation rather than legend {.smaller}\n\n```{r}\n#| label: annotation\n#| output-location: column\n#| code-line-numbers: \"8,9,10,15\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n## Themes {.smaller}\n\n```{r}\n#| label: addthemes\n#| output-location: column\n#| code-line-numbers: \"16,17,18,19\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), \n  color = MetBrewer::met.brewer(\"Lakota\")[1:3], \n  label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n## Calculate median and standard deviation {.smaller}\n\n```{r}\n#| label: calcmed\n#| output-location: fragment\ndata_summary <- data |>\n  group_by(species) |>\n  summarise(across(c(bill_length_mm, bill_depth_mm),\n  list(median = ~median(., na.rm = TRUE), \n       sd = ~sd(., na.rm = TRUE))))\n\ndata_summary\n```\n\n## Median {.smaller}\n\n```{r}\n#| label: addmedian\n#| output-location: column\n#| code-line-numbers: \"5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\"\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  geom_errorbar(\n    data = data_summary,\n    aes(x = bill_length_mm_median,\n      ymin = bill_depth_mm_median - bill_depth_mm_sd,\n      ymax = bill_depth_mm_median + bill_depth_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .5, size = .8) +\n  geom_errorbar(\n    data = data_summary,\n    aes(y = bill_depth_mm_median,\n      xmin = bill_length_mm_median - bill_length_mm_sd,\n      xmax = bill_length_mm_median + bill_length_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .25, size = .8) +\n  scale_color_manual(values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), color = MetBrewer::met.brewer(\"Lakota\")[1:3], label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n\n## Final plot {.smaller}\n\n::: {.absolute left=15%}\n```{r}\n#| label: final\n#| echo: false\n#| fig-width: 7\n#| fig-height: 5.5\ndata |> ggplot(aes(x = bill_length_mm, \n                  y = bill_depth_mm, \n                  color = species)) +\n  geom_errorbar(\n    data = data_summary,\n    aes(x = bill_length_mm_median,\n      ymin = bill_depth_mm_median - bill_depth_mm_sd,\n      ymax = bill_depth_mm_median + bill_depth_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .5, size = .8) +\n  geom_errorbar(\n    data = data_summary,\n    aes(y = bill_depth_mm_median,\n      xmin = bill_length_mm_median - bill_length_mm_sd,\n      xmax = bill_length_mm_median + bill_length_mm_sd,\n      color = species,\n      color = after_scale(colorspace::darken(color, .2, space = \"combined\"))), \n      inherit.aes = FALSE, width = .25, size = .8) +\n  geom_point(size = 1.5, alpha = 0.5) +\n  scale_color_manual(name = NULL,\n                    values = MetBrewer::met.brewer(\"Lakota\")) +\n  scale_x_continuous(limits = c(30,60), breaks = seq(30,60,10)) +\n  scale_y_continuous(limits = c(12,21), breaks = seq(12,21,3)) +\n  annotate(\"text\", x = c(34.7, 55.7, 50.7), y = c(20.7, 19, 13.6), color = MetBrewer::met.brewer(\"Lakota\")[1:3], label = c(\"Adélie\",\"Chinstrap\",\"Gentoo\"), fontface = \"bold\", size = 4) +\n  labs(x = \"Bill length (in mm)\", y = \"Bill depth (in mm)\",\n      title = \"Penguins are awesome\",\n      subtitle = \"Depth and length of bills\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n  plot.title.position = \"plot\",\n  plot.title = element_text(size = 16, face=\"bold\"),\n  plot.subtitle = element_text(size = 13),\n  panel.grid.minor = element_blank())\n```\n:::\n\n## Bibliography {.bibstyle}\n\n:::footer\n:::"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":6,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","metadata-files":["../../_variables.yml"],"from":"markdown+emoji","highlight-style":"printing","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.3.433","auto-stretch":true,"bibliography":["../../data/lit/wipol_advanced.bib"],"csl":"../../data/lit/wipol.csl","_quarto-vars":{"author":"Matthias Schnetzer","instructor":{"name":"Dr. Matthias Schnetzer","name-wo-title":"Matthias Schnetzer","employer":"Vienna Chamber of Labour & WU Vienna","email":"mschnetz@wu.ac.at","url":"https://mschnetzer.github.io","twitter":"matschnetzer","github":"mschnetzer","contact_policy":"Please contact me via [e-mail](mailto:mschnetz@wu.ac.at) and I will usually respond within a few days. Note that we use the learning platform [learn.wu.ac.at](https://learn.wu.ac.at) for all assignments in this course.\n"},"course":{"title":"Economic Policy (Applied Track)","subtitle":"Visualizing Innovation","icon":"fa-lightbulb","icon-bg":"fa-comment","number":"PI 0822","semester":"Winter term 2023","days":"Mondays","time":"10:00–12:00","location":"TC.3.10","dates":"Oct 9, 2023 – Dec 18, 2023","students":30,"url":"https://mschnetzer.github.io/econpolviz","copyright_year":"2023"},"university":{"name":"Vienna University of Economics and Business","department":"Department of Economics","url":"https://www.wu.ac.at"}},"title":"<span class='fa-stack course-icon'>\n    <i class='fas {{< var course.icon-bg >}} fa-stack-2x blue'></i>\n    <i class='fas {{< var course.icon >}} fa-stack-1x fa-inverse' style='margin-top:-5pt'></i>\n  </span><br>\n{{< var course.subtitle >}}\n","author":"Matthias Schnetzer","subtitle":"Visualization","date":"March 20, 2023","date-format":"long","instructor":{"name":"Dr. Matthias Schnetzer","name-wo-title":"Matthias Schnetzer","employer":"Vienna Chamber of Labour & WU Vienna","email":"mschnetz@wu.ac.at","url":"https://mschnetzer.github.io","twitter":"matschnetzer","github":"mschnetzer","contact_policy":"Please contact me via [e-mail](mailto:mschnetz@wu.ac.at) and I will usually respond within a few days. Note that we use the learning platform [learn.wu.ac.at](https://learn.wu.ac.at) for all assignments in this course.\n"},"course":{"title":"Economic Policy (Applied Track)","subtitle":"Visualizing Innovation","icon":"fa-lightbulb","icon-bg":"fa-comment","number":"PI 0822","semester":"Winter term 2023","days":"Mondays","time":"10:00–12:00","location":"TC.3.10","dates":"Oct 9, 2023 – Dec 18, 2023","students":30,"url":"https://mschnetzer.github.io/econpolviz","copyright_year":"2023"},"university":{"name":"Vienna University of Economics and Business","department":"Department of Economics","url":"https://www.wu.ac.at"},"theme":"../econpol_slides.scss","footer":"{{< var course.number >}} {{< var course.title >}} | {{< var course.semester >}}","logo":"../../data/img/wu-logo-simple.png","header-includes":["<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\" rel=\"stylesheet\"/>\n"],"slideNumber":true,"showSlideNumber":"all","transition":"fade","progress":true,"multiplex":false,"scrollable":true,"previewLinks":false,"hideInactiveCursor":true,"pause":true}}},"projectFormats":["html"]}