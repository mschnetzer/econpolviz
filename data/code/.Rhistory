geom_text(aes(label = geo)) +
theme_minimal()
inflation |> filter(geo %in% c("AT","HU","ES")) |>
slice_max(date)
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES") |>
slice_max(date)),
aes(label = geo)) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |>
slice_max(date)),
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = geo)) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste(geo, values))) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste(geo, ":", values, "%"))) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%"))) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0.5) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 1) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 0.1) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 1) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = "10 days") +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 1) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 200) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 30) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 30) +
scale_x_date(limits = c(as.Date("2010-01-01"), as.Date("2023-10-01"))) +
theme_minimal()
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 30) +
scale_x_date(limits = c(as.Date("2010-01-01"), as.Date("2023-10-01"))) +
theme_minimal() +
theme(legend.position = "none")
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 30) +
scale_x_date(limits = c(as.Date("2010-01-01"), as.Date("2023-10-01"))) +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(legend.position = "none")
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 30) +
scale_x_date(limits = c(as.Date("2010-01-01"), as.Date("2023-10-01"))) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal() +
theme(legend.position = "none")
inflation |>
ggplot(aes(x = date, y = values, group = geo, color = geo)) +
geom_line(linewidth = 0.5) +
gghighlight(geo %in% c("AT","HU","ES"), use_direct_label = F,
unhighlighted_params = list(color = "grey80", linewidth = 0.2)) +
geom_text(data = inflation |> filter(geo %in% c("AT","HU","ES")) |> slice_max(date),
aes(label = paste0(geo, ": ", values, "%")),
size = 2.5, hjust = 0, nudge_x = 30) +
scale_x_date(limits = c(as.Date("2010-01-01"), as.Date("2023-10-01"))) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(x = NULL, y = NULL, title = "Inflation in Europe") +
theme_minimal() +
theme(legend.position = "none")
library(tidyverse)
rawdata <- read.csv2("https://data.statistik.gv.at/data/OGD_vpi15_VPI_2015_1.csv")
View(rawdata)
labels <- read.csv2("https://data.statistik.gv.at/data/OGD_vpi15_VPI_2015_1_HEADER.csv")
View(labels)
coicop <- read.csv2("https://data.statistik.gv.at/data/OGD_vpi15_VPI_2015_1_C-VPI5-0.csv")
View(coicop)
inflation <- rawdata |>
mutate(date = str_extract(C.VPIZR.0, "\\d+"))
View(inflation)
inflation <- rawdata |>
mutate(date = ymd(str_extract(C.VPIZR.0, "\\d+")))
View(inflation)
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+")))
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+"))) |>
select(date, contribution = F.VPIEFVJM, coicop = C.VPI5.0)
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+"))) |>
select(date, contribution = F.VPIEFVJM, coicop = C.VPI5.0) |>
drop_na()
library(ggstream)
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+"))) |>
select(date, contribution = F.VPIEFVJM, coicop = C.VPI5.0) |>
drop_na() |>
filter(date > "2019-01-01")
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+"))) |>
select(date, contribution = F.VPIEFVJM, coicop = C.VPI5.0) |>
drop_na() |>
filter(date > "2019-01-01", coicop != "VPI-0")
inflation |>
ggplot(aes(x = date, y = contribution)) +
geom_stream()
inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream()
inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream() +
coord_flip()
inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream() +
coord_flip() +
theme_minimal()
uniqe(inflation$coicop)
unique(inflation$coicop)
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+"))) |>
select(date, contribution = F.VPIEFVJM, coicop = C.VPI5.0) |>
drop_na() |>
filter(date > "2019-01-01", coicop != "VPI-0") |>
mutate(coicop = ifelse(coicop %in% c("VPI-06", "VPI-07", "VPI-08", "VPI-09",
"VPI-10", "VPI-11", "VPI-12"), "Misc.", coicop))
inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream() +
coord_flip() +
theme_minimal()
inflation <- rawdata |>
mutate(date = ym(str_extract(C.VPIZR.0, "\\d+"))) |>
select(date, contribution = F.VPIEFVJM, coicop = C.VPI5.0) |>
drop_na() |>
filter(date > "2019-01-01", coicop %in% c("VPI-01", "VPI-02", "VPI-03", "VPI-04", "VPI-05"))
inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream() +
coord_flip() +
theme_minimal()
library(MetBrewer)
library(wesanderson)
library(viridis)
inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream() +
coord_flip() +
theme_minimal()
baseplot <- inflation |>
ggplot(aes(x = date, y = contribution, fill = coicop)) +
geom_stream() +
coord_flip() +
theme_minimal()
baseplot
baseplot +
scale_fill_manual(values = MetBrewer::met.brewer("Lakota"))
baseplot +
scale_fill_manual(values = met.brewer("Lakota"))
baseplot +
scale_fill_manual(values = met.brewer("Lakota"))
baseplot +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1"))
baseplot +
scale_fill_viridis_d()
baseplot +
scale_fill_viridis_d(option = "A")
baseplot +
scale_fill_viridis_d(option = "B")
baseplot +
scale_fill_viridis_d(option = "D")
install.packages(c("checkmate", "dbplyr", "giscoR", "grImport2", "htmlTable", "httpuv", "knitr", "lattice", "leaflet.providers", "magick", "markdown", "performance", "plotly", "spatstat.data", "spatstat.geom", "spatstat.utils", "utf8", "withr", "wk"))
17.23/0.329
install.packages(c("dplyr", "httr2", "leaflet", "Matrix", "R.utils", "shiny", "stringi", "stringr"))
library(tidyverse)
library(sf)
library(osmdata)
library(ggtext)
library(here)
shp <- giscoR::gisco_get_countries(country = "Austria", resolution = 03)
st_crs(shp)
st_bbox(shp)
bbox_sf <- st_as_sfc(st_bbox(shp)) %>%
st_transform(crs = 32632)
bbox_grid <- st_make_grid(bbox_sf, n = 3)
bbox_mat <- do.call("rbind", lapply(bbox_grid %>% st_transform(4326), st_bbox))
bbox_mat
bbox_mat[1, ]
rails <- opq(bbox = st_bbox(shp)) |>
add_osm_feature(key = "railway", value = "rail") %>%
osmdata_sf(quiet = FALSE)
rails
rails <- opq(bbox = st_bbox(shp)) |>
add_osm_feature(key = "railway", value = "rail") %>%
osmdata_sf(quiet = FALSE)
library(tidyverse)
library(sf)
library(osmdata)
library(ggtext)
library(here)
shp <- giscoR::gisco_get_countries(country = "Austria", resolution = 03)
st_crs(shp)
st_bbox(shp)
bbox_sf <- st_as_sfc(st_bbox(shp)) %>%
st_transform(crs = 32632)
bbox_grid <- st_make_grid(bbox_sf, n = 3)
bbox_mat <- do.call("rbind", lapply(bbox_grid %>% st_transform(4326), st_bbox))
bbox_mat
bbox_mat[1, ]
rails <- opq(bbox = st_bbox(shp)) |>
add_osm_feature(key = "railway", value = "rail") %>%
osmdata_sf(quiet = FALSE)
library(tidyverse)
library(sf)
library(osmdata)
library(ggtext)
library(here)
shp <- giscoR::gisco_get_countries(country = "Austria", resolution = 03)
st_crs(shp)
st_bbox(shp)
bbox_sf <- st_as_sfc(st_bbox(shp)) %>%
st_transform(crs = 32632)
rails <- opq(bbox = st_bbox(shp)) |>
add_osm_feature(key = "railway", value = "rail") %>%
osmdata_sf(quiet = FALSE)
devtools::install_github("ropensci/osmdata")
detach("package:osmdata", unload = TRUE)
library(tidyverse)
library(sf)
library(giscoR)
library(rayshader)
install.packages(c("crosstalk", "deldir", "DescTools", "ggthemes", "insight", "mvtnorm", "sp"))
pres <- readxl::read_xlsx("Daten/Lehre/Vergangene LVs/2023_WS/topics_econpol.xlsx")
View(pres)
pres |> count(Topic)
library(tidyverse)
pres |> count(Topic)
print(n= 20)
pres |> count(Topic) |> print(n = 30)
pres |> count(`Presentation date`) |> print(n = 30)
librarian::shelf(tidyverse, readxl, countrycode, ggtext, MetBrewer)
load("08_wealth.RData")
setwd("~/Daten/Lehre/wipol_viz_MA/data/code")
load("08_wealth.RData")
load("06_themes.RData")
# Data into long format with "pivot_longer", capitalize country codes with "toupper" and merge country names from countrycode package with "left_join"
findat <- hfcs |>
pivot_longer(-measure, names_to = "country", values_to = "value") |>
mutate(across(c(country, measure), toupper)) |>
left_join(countrycode::codelist |> select(iso2c, country.name.en),
by = c("country" = "iso2c")) |>
mutate(country.name.en = ifelse(country == "EURO_AREA", "Euro Area", country.name.en),
country.name.en = fct_reorder(country.name.en, value))
findat |>
ggplot(aes(x = country.name.en, y = value, group = country, color = measure)) +
geom_line(color = "gray90", alpha = 0.15, linewidth = 2) +
geom_point(size = 2) +
scale_color_manual(values = met.brewer("Isfahan2"),
guide = guide_legend(override.aes = list(size = 4))) +
scale_y_continuous(labels = scales::number_format(prefix = "€", suffix = "K")) +
coord_flip() +
labs(x = NULL, y = NULL, color = NULL,
title = "Who are the <span style='color:gold;'>**richest**</span> Europeans?",
subtitle = "Percentiles of net wealth distributions in thousand Euros",
caption = "Data: HFCS 2017, ECB. Figure: @matschnetzer") +
theme_minimal(base_family = "Roboto Condensed") +
theme(plot.background = element_rect(fill = "black"),
plot.margin = margin(t = 1, b = 1, l = 1, r = 1, unit = "lines"),
plot.title.position = "plot",
plot.title = element_markdown(size = 20),
plot.subtitle = element_text(margin = margin(b = 1, unit = "lines")),
plot.caption = element_text(margin = margin(t = 2, unit = "lines"), size = 7),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.1, color = "gray80"),
legend.position = c(0.65, 0.3),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
axis.text.y = element_text(size = 8))
ggsave("wealth.png", width = 6, height = 5, dpi = 320)
setwd("~/Daten/Lehre/wipol_viz_MA/data/code")
librarian::shelf(tidyverse, eurostat, ggtext, showtext)
# And here are the new packages for today
librarian::shelf(rnaturalearth, rnaturalearthdata, giscoR, sf)
# Load Google fonts that we use
font_add_google("Alfa Slab One", family = "Alfa Slab One")
font_add_google("Roboto Condensed", family = "Roboto Condensed")
showtext_auto()
showtext_opts(dpi = 320)
# MAP 1: Social mobility in European OECD countries
load("09_mobility.RData")
# MAP 1: Social mobility in European OECD countries
load("07_maps.RData")
# Load map for Europe from naturalearth
map <- ne_countries(continent = "Europe", scale = "medium", returnclass = "sf")
# Set limits for Continental Europe
map |> ggplot() + geom_sf() +
coord_sf(xlim = c(-25,50), ylim = c(35,70), expand = FALSE)
# Change projection to Mercator
map |> st_transform('EPSG:3857') |>
ggplot() + geom_sf() +
coord_sf(xlim = c(-3090000, 4500000), ylim = c(11500000,  4100000), expand = F)
# Merge the OECD mobility data to the map
finmap <- map |> left_join(socmob, by = c("iso_a3" = "iso3c"))
finmap |> st_transform('EPSG:3857') |>
mutate(generations = factor(generations)) |>
filter(iso_a3 != "ISL") |>
ggplot() +
geom_sf(aes(fill = generations), color = "black") +
scale_fill_manual(name = "Expected **number of generations** <br>it takes an offspring from a family at the <br>bottom 10% to reach the mean income.",
values = RColorBrewer::brewer.pal(6, "YlOrRd"),
na.value = "gray90",
guide = guide_legend(title.position = "top",
label.position = "bottom",
keywidth = 2, keyheight = 0.8,
nrow = 1,
override.aes = list(color = NA))) +
annotate("text", x = -800000, y = 10700000, label = "Social Mobility in Europe",
family = "Alfa Slab One", size = 7, hjust = 0.5) +
coord_sf(xlim = c(-2790000, 4500000), ylim = c(11500000,  4100000), expand = F) +
labs(x = NULL, y = NULL) +
theme_minimal(base_family = "Roboto Condensed") +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.grid = element_blank(),
axis.text = element_blank(),
legend.position = c(0.27,0.78),
legend.title = element_markdown(hjust = 0.5, size = 12, lineheight = 1.1),
legend.text = element_text(size = 11),
legend.spacing.x = unit(0, "pt"))
# Set limits for Continental Europe
map |> ggplot() + geom_sf() +
coord_sf(xlim = c(-25,50), ylim = c(35,70), expand = FALSE)
# Change projection to Mercator
map |> st_transform('EPSG:3857') |>
ggplot() + geom_sf() +
coord_sf(xlim = c(-3090000, 4500000), ylim = c(11500000,  4100000), expand = F)
# Merge the OECD mobility data to the map
finmap <- map |> left_join(socmob, by = c("iso_a3" = "iso3c"))
finmap |> st_transform('EPSG:3857') |>
mutate(generations = factor(generations)) |>
filter(iso_a3 != "ISL") |>
ggplot() +
geom_sf(aes(fill = generations), color = "black") +
scale_fill_manual(name = "Expected **number of generations** <br>it takes an offspring from a family at the <br>bottom 10% to reach the mean income.",
values = RColorBrewer::brewer.pal(6, "YlOrRd"),
na.value = "gray90",
guide = guide_legend(title.position = "top",
label.position = "bottom",
keywidth = 2, keyheight = 0.8,
nrow = 1,
override.aes = list(color = NA))) +
annotate("text", x = -800000, y = 10700000, label = "Social Mobility in Europe",
family = "Alfa Slab One", size = 7, hjust = 0.5) +
coord_sf(xlim = c(-2790000, 4500000), ylim = c(11500000,  4100000), expand = F) +
labs(x = NULL, y = NULL) +
theme_minimal(base_family = "Roboto Condensed") +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.grid = element_blank(),
axis.text = element_blank(),
legend.position = c(0.27,0.78),
legend.title = element_markdown(hjust = 0.5, size = 12, lineheight = 1.1),
legend.text = element_text(size = 11),
legend.spacing.x = unit(0, "pt"))
librarian::shelf(tidyverse, eurostat, ggtext, showtext)
# And here are the new packages for today
librarian::shelf(rnaturalearth, rnaturalearthdata, giscoR, sf)
# MAP 1: Social mobility in European OECD countries
load("07_maps.RData")
# Load map from Eurostat via giscoR
map <- gisco_get_countries(region = "Europe", resolution = "10", epsg = 4326)
# Set limits for Continental Europe
map |> ggplot() + geom_sf() +
coord_sf(xlim = c(-25,50), ylim = c(35,70), expand = FALSE)
# Change projection to Mercator
map |> st_transform('EPSG:3857') |>
ggplot() + geom_sf() +
coord_sf(xlim = c(-3090000, 4500000), ylim = c(11500000,  4100000), expand = F)
map
# Load map from Eurostat via giscoR
map <- gisco_get_countries(region = "Europe", resolution = "10", epsg = 4326)
class(map)
